一、如果使用使用apt出现以下错误：
E:Could not get lock /var/lib/apt/lists/lock - open (11: Resource temporarily unavailable)
出现这个问题的原因可能是有另外一个程序正在运行，导致资源被锁不可用。而导致资源被锁的原因，可能是上次安装时没正常完成，而导致出现此状况。
解决方法：输入以下命令
 
sudo rm /var/cache/apt/archives/lock
sudo rm /var/lib/dpkg/lock
 
之后再安装想装的包，即可解决



二、虚拟环境
1、虚拟环境为python特有的一套软件环境。
2、作用：可以创建不同版本、不同环境的python，用于运行不用状态的python项目。
    优点：分离不同的语言环境或三方软件。
3、Linux系统默认安装了两个python语言版本，分别为python2.7.12及python3.5.2。
    执行命令python，进入python2.7.12版本下。
    执行命令python3，目前进入python3.5.2版本下。
系统默认安装的python版本不要删除，原因：linux系统有可能在使用这些版本。
4、安装虚拟环境
   pip install virtualenv

注：Linux下默认未安装pip，需要手动安装
安装pip：
  sudo apt install python-pip : 使用python2.7安装  pip命令
  sudo apt install python3-pip : 使用python3.5安装  pip3命令

默认安装的pip为8.1.1版本，可以更新或不更新，更新命令为：
   pip install --upgrade pip

5、使用虚拟环境
5.1、创建虚拟环境
   virtualenv 虚拟环境名称
    默认安装的python的语言版本为2.7.12的版本。
5.2、当虚拟环境未激活时，需要进入虚拟环境的bin目录下执行 ./python 才能输入python命令。
5.3、激活虚拟环境
   source 虚拟环境的路径/bin/activate
当虚拟环境激活时，在命令的最前方可以看到 (虚拟环境名称)
5.4、退出虚拟环境
    deactivate
5.5、安装指定版本的虚拟环境
    virtualenv 虚拟环境名称 -p 指定的python语言版本的路径
例子：python3.5.2的环境
    virtualenv Python35 -p /usr/bin/python3.5

5.6、其他命令
   pip list  ： 查看当前环境下安装的三方包
   pip install 包名： 安装第三方包

6、统一管理虚拟环境的软件  virtualenvwrapper 
6.1、安装管理软件
    sudo easy_install virtualenvwrapper 
    或  sudo pip install virtualenvwrapper 
注意问题：如果安装结束后没有virtualenvwrapper.sh，将warpper卸载重装，sudo pip uninstall virtualenvwrapper 

6.2、配置管理软件的环境变量
a、环境管理工具只是将虚拟环境放到一个统一的文件目录下进行管理，该目录文件需要我们手动创建，该文件目录路径需要我们配置到环境变量中，配置结束并刷新后，虚拟环境的路径就不用我们管理了。

b、在用户的目录下创建一个隐藏目录，该目录的名称 .virtualenvs
   该隐藏目录的路径为  /home/用户名/.virtualenvs
   
   在环境变量中导出统一管理虚拟环境的目录路径：
   打开配置文件： vim + ~/.bashrc
   
   在用户环境变量配置文件中导出虚拟环境目录路径
    export WORKON_HOME=/home/用户名/.virtualenvs
   在用户环境变量配置文件中激活虚拟环境管理软件
     source /usr/local/bin/virtualenvwrapper.sh
   
   刷新配置文件
    source ~/.bashrc

6.3、使用虚拟环境
注：虚拟环境只是将python的指向版本更改了，其他命令及路径与之前未虚拟环境是一样的。
a、创建并激活虚拟环境： mkvirtualenv 虚拟环境名称 （默认创建python2.7）
b、退出虚拟环境:  deactivate
c、创建指定版本的虚拟环境
      mkvirtualenv 虚拟环境名称 -p 指定的python语言版本的路径
例子：python3.5.2的环境
      mkvirtualenv Python35 -p /usr/bin/python3.5
d、继续使用之前已经创建并存在的虚拟环境： workon 虚拟环境名称
e、删除虚拟环境：rmvirtualenv 虚拟环境名称

三、安装Python3.6
1、准备工作内容：需要有一个Python3.6.tgz Linux下的源码安装包
2、解压压缩包
   解压到常用的软件管理目录中: ~/software
   tar -zxvf Python-3.6.5.tgz -C ~/software
3、源码安装时，安装包中都会有readme文件，说明文档中一般会有安装步骤及命令，根据说明文档中的步骤安装即可；如果没有说明文档，去官网上查找文档。
4、根据说明文档安装：
    进入解压缩的目录中执行以下命令：
    ./configure    配置命令
    
    ./configure --enable-optimizations
    
    make   构建  
    
    sudo make install  安装

5、如果执行 sudo make install报错，报出一个Zip.....的错误，执行以下命令：
   sudo apt install zlib*
   sudo make install

6、如果出现gcc文件的错误，安装gcc，执行以下命令：
   sudo apt install gcc
   sudo apt install gcc-c++

注：当成功安装python3.6.5后，python3的指令会指向python3.6.5,想要进入python3.5.2的版本，执行命令python3.5

四、虚拟环境
   创建3.6.5的虚拟环境
   mkvirtualenv Python36 -p /usr/local/bin/python3.6
   
   创建3.5.2的虚拟环境
   mkvirtualenv Python35 -p /usr/bin/python3.5

   （其他使用命令与之前一致）

五、安装方式区别
1、源码安装
缺点：可能会出现bug（电脑环境不同，会缺少安装时必要的库文件）
优点：可配置性很高。
make构建：耗时长，可能会缺少gcc，需要安装

2、apt安装
缺点：联网安装，可能下载软件时，丢包。
    需要确切的软件名称。
优点：方式简单。

3、deb安装
缺点：可配置性低。
优点：方式简单。


六、安装PyCharm
1、准备工作内容：需要有一个PyCharm Linux下的安装包
2、解压压缩包
   解压到常用的软件管理目录中: ~/software
   tar -zxvf pycharm...gz -C ~/software
3、可以在解压完成的目录下临时测试pycharm是否可用
    在解压完的目录下pycharm-2018.1.3目录的bin目录下执行
     ./pycharm.sh 
4、配置pycharm的环境变量  ~/.bashrc
    在文件最后输入以下内容：
    export PyCharm=/home/用户名/software/pycharm-2018.1.3
    export PATH=$PyCharm/bin:$PATH
5、刷新配置文件
    source ~/.bashrc
6、当配置文件刷新结束后可以在当前用户的任意位置启动pycharm，
    启动命令：pycharm.sh

激活网址：http://www.zhihu.com/question/265926620

七、安装mysql
命令: sudo apt install mysql-server-5.7

   在系统安装时，会有设置数据库root用户的密码的弹出框，需要设置root用户密码，设置结束后回车，再次确认密码，回车。安装结束后可以在当前用户任意位置可以链接mysql。
链接命令： mysql -u root -p
输入mysql密码即可。

mysql下所有的命令与之前windows下一样。


八、安装MongoDB
1、准备工作内容：需要有一个MongoDB Linux下的安装包
2、解压压缩包
   解压到桌面
   tar -zxvf mongodb..gz
3、将解压完成的文件中的内容移动 /usr/local/mongodb 目录下
   sudo mv ~/Desktop/mongodb...af/ /usr/local/mongodb
   注：当前mongodb的安装路径为 ：/usr/local/mongodb
4、在mongodb目录下创建data目录，在data目录下创建db及log目录
   当前db目录的路径为 ： /usr/local/mongodb/data/db
5、启动mongodb服务器端
   临时测试：进入到mongodb的bin目录下，执行以下命令：
    ./mongod -dbpath=/usr/local/mongodb/data/db
6、启动mongodb客户端
   临时测试：进入到mongodb的bin目录下，执行以下命令：
    ./mongo

linux下mongodb所有的命令与windows下写过的语句完全一致

作业：mongodb的环境变量


九、安装redis
1、准备工作内容：需要有一个redis Linux下的安装包
2、解压压缩包
   解压到常用的软件管理目录中: ~/software
   tar -zxvf redis...gz -C ~/software
3、进入到解压缩文件redis-4.0.9下，执行make
    cd ~/software/redis-4.0.9
    make   构建
4、make结束后，执行以下命令：
    make test
5、make test结束后，执行安装的命令：
   sudo make install

6、启动redis服务器：
   cd ~/software/redis-4.0.9/src
   ./redis-server

7、启动redis客户端：
   cd ~/software/redis-4.0.9/src
   ./redis-cli

注：当前redis的安装路径为：~/software/redis-4.0.9

linux下redis所有的命令与windows下写过的语句完全一致


十、Linux下的下载命令
1、系统自带的网络下载命令  wget
    wget  网址
2、手动安装的网络下载命令  curl
   安装：sudo apt install curl
   curl 网址    默认将下载的内容打印到终端界面上
   curl 网址 -o 保存的文件名称    自己设置文件保存名称及路径


十一、FTP 
用于文件的上传及下载。
1、vsftpd 是一个开源免费的ftp服务器软件，在Linux中最受推崇的FTP服务器，特点小巧轻快，安全易用
2、安装
:apt install vsftpd
3、启动
:systemctl start vsftpd
4、停止:systemctl stop vsftpd


5、重启
:systemctl restart vsftpd  	   


6、xftp 为ftp免费开源的客户端
7、默认的ftp服务器只支持下载，不支持上传，想要支持上传，需要更改配置文件   /etc/vsftpd.conf
   更改配置文件  sudo vim + /etc/vsftpd.conf
   写入内容     write_enable=YES
   保存并退出
注：配置文件的语法格式： 属性=值    等号两边不能有空格。
8、更改配置文件结束后，重启ftp服务器
   systemctl restart vsftpd  

xshell ： 远程链接linux系统
xftp ：文件的上传或下载


git：项目管理工具

github：







   

























